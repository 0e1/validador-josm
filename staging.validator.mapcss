meta
{
  title: "Staging rules Brazil";
  version: "2017-02-14";
  description: "Staging rules for Brazil. Messages are in Portuguese only.";
  author: "OpenStreetMap Brasil";
  watch-modified: true;
}

/* acesso à Internet deve fazer parte de algum estabelecimento/local */
/* http://overpass-turbo.eu/s/8PJ */
*[internet_access][!leisure][!building][!office][!amenity][!tourism][!shop] {
	throwWarning: tr("{0} deve estar associado a um local", "{0.key}");
}

/* wheelchair deve fazer parte de algum estabelecimento/local */
/* http://overpass-turbo.eu/s/8PL */
*[wheelchair][!highway][!man_made][!leisure][!building][!office][!amenity][!tourism][!shop] {
	throwWarning: tr("{0} deve estar associado a um local", "{0.key}");
}

*[name =~ /^(?U)(\p{Lower}| )+$/] {
	throwWarning: tr("{0} totalmente em minúsculo", "{0.key}");
	group: tr("Brasil - Verificar");
}

/* áreas residenciais muito grandes que podem indicar uso incorreto como marcador de cidade */
/* http://overpass-turbo.eu/s/9pM */
area[landuse=residential][name !~ /(?i)(?u)(habitacional|condomínio|residencial)/][!barrier][eval(areasize()) > 200000] {
	throwWarning: tr("área residencial muito grande");
	group: tr("Brasil - Verificar");
}

way[highway $= _link][eval(waylength()) > 250] {
	throwWarning: tr("{0} com comprimento muito grande", tag("highway"));
	group: tr("Brasil - Verificar");
}

way[highway][junction = roundabout][eval(waylength()) < 30]:closed {
	throwWarning: tr("{0} com comprimento pequeno", "{1.tag}");
	suggestAlternative: "highway=mini_roundabout";
	suggestAlternative: "highway=turning_circle";
	suggestAlternative: "highway=turning_loop";
	group: tr("Brasil - Verificar");
}

/* --> issue #77 */
area[admin_level =~ /^(8|9)$/][place] {
	throwError: tr("limite não deve possuir {0}", "{1.key}");
}

area[place =~ /^(neighbourhood|suburb)$/][admin_level][admin_level != 10] {
	throwError: tr("local com {0} ou {1} errado", "{0.key}", "{1.key}");
}

relation[admin_level = 10] >[role = admin_centre] node {
	throwError: tr("bairro não deve possuir admin_centre");
	suggestAlternative: "label";
}
/* issue #77 <-- */

way[highway] > node { set .is_in_highway; }

area[!highway] > node.is_in_highway {
	throwWarning: tr("área conectada na rua");
}

way[power = line][voltage < 50000] {
	throwWarning: tr("{0} is too low for {1}", "{1.key}", "{0.tag}");
	suggestAlternative: "power=minor_line";
}

way[power = minor_line][voltage >= 50000] {
	throwWarning: tr("{0} is too high for {1}", "{1.key}", "{0.tag}");
	suggestAlternative: "power=line";
}

node[power = tower] < way[power = cable] {
	throwWarning: tr("{0} should not be used with power=tower", "{0.tag}");
	suggestAlternative: "power=line";
}

node[power = pole] < way[power = cable] {
	throwWarning: tr("{0} should not be used with power=pole", "{0.tag}");
	suggestAlternative: "power=minor_line";
}

node[power = pole] < way[power = line] {
	throwWarning: tr("{0} should not be used with power=pole", "{0.tag}");
	suggestAlternative: "power=tower";
	suggestAlternative: "power=minor_line";
}

way[power = line] > node[man_made = tower] {
	throwWarning: tr("wrong usage of {0}", "{0.tag}");
	suggestAlternative: "power=tower";
}

way[power = minor_line] > node[man_made = tower] {
	throwWarning: tr("wrong usage of {0}", "{0.tag}");
	suggestAlternative: "power=tower";
	suggestAlternative: "power=pole";
}
